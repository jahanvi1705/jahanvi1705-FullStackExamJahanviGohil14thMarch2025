{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///Users/darshangohil/Desktop/jahanvi1705-FullStackExamJahanviGohil14thMarch2025/client/src/app/login/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react';\nimport { useRouter } from 'next/navigation';\n\nimport { ToastContainer, toast } from 'react-toastify'; \n\nconst LoginPage = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [success, setSuccess] = useState('');\n  const [error, setError] = useState('');\n  const router = useRouter();\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (email && password) {\n      setLoading(true);\n      setError('');\n    } else {\n      setError('Please fill in all fields');\n    }\n\n    // Prepare the user data to send\n    const userData = { email, password };\n\n    // Integrate User login API\n    try {\n      const res = await fetch('http://localhost:3000/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(userData),\n      });\n\n      const data = await res.json();\n      \n      if (res.status === 200) {\n        setSuccess('Registration successful!');\n        setTimeout(() => {\n          localStorage.setItem('authToken', data.data);\n          router.push('/user/userList');  // Redirect to login page after successful registration\n        }, 2000);\n      } else {\n        if(res.status === 404){\n          toast.error(data.message)\n        }\n\n        if(res.status === 400){\n            toast.error(data.message)\n        }\n        if(res.status === 500){\n            toast.error(data.message)\n        }\n        setError(data.message || 'Registration failed.');\n      }\n    } catch (error) {\n      setError('An error occurred while registering. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <>\n    <div className=\"min-h-screen flex justify-center items-center bg-gray-100\">\n      <div className=\"bg-white p-8 rounded-lg shadow-lg w-full max-w-sm\">\n        <h2 className=\"text-2xl font-bold text-center mb-6 text-black\">Login</h2>\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\n          {/* {error && <p className=\"text-red-500 text-center\">{error}</p>} */}\n          <div>\n            <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              className=\"mt-1 block w-full p-2 border border-gray-300 rounded-md  text-black\"\n              required\n            />\n          </div>\n          <div>\n            <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              className=\"mt-1 block w-full p-2 border border-gray-300 rounded-md  text-black\"\n              required\n            />\n          </div>\n          <button type=\"submit\" className=\"w-full bg-blue-500 text-white py-2 rounded-md hover:bg-blue-600\">\n            Login\n          </button>\n        </form>\n        <p className=\"text-center mt-4 text-black\">\n          Don't have an account?{' '}\n          <a href=\"/register\" className=\"text-blue-500\">Register</a>\n        </p>\n      </div>\n    </div>\n     <ToastContainer />\n\n     </>\n  );\n};\n\nexport default LoginPage;\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,YAAY;IAChB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAEhB,IAAI,SAAS,UAAU;YACrB,WAAW;YACX,SAAS;QACX,OAAO;YACL,SAAS;QACX;QAEA,gCAAgC;QAChC,MAAM,WAAW;YAAE;YAAO;QAAS;QAEnC,2BAA2B;QAC3B,IAAI;YACF,MAAM,MAAM,MAAM,MAAM,oCAAoC;gBAC1D,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;YACvB;YAEA,MAAM,OAAO,MAAM,IAAI,IAAI;YAE3B,IAAI,IAAI,MAAM,KAAK,KAAK;gBACtB,WAAW;gBACX,WAAW;oBACT,aAAa,OAAO,CAAC,aAAa,KAAK,IAAI;oBAC3C,OAAO,IAAI,CAAC,mBAAoB,uDAAuD;gBACzF,GAAG;YACL,OAAO;gBACL,IAAG,IAAI,MAAM,KAAK,KAAI;oBACpB,mJAAA,CAAA,QAAK,CAAC,KAAK,CAAC,KAAK,OAAO;gBAC1B;gBAEA,IAAG,IAAI,MAAM,KAAK,KAAI;oBAClB,mJAAA,CAAA,QAAK,CAAC,KAAK,CAAC,KAAK,OAAO;gBAC5B;gBACA,IAAG,IAAI,MAAM,KAAK,KAAI;oBAClB,mJAAA,CAAA,QAAK,CAAC,KAAK,CAAC,KAAK,OAAO;gBAC5B;gBACA,SAAS,KAAK,OAAO,IAAI;YAC3B;QACF,EAAE,OAAO,OAAO;YACd,SAAS;QACX,SAAU;YACR,WAAW;QACb;IACF;IAEA,qBACE;;0BACA,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAAiD;;;;;;sCAC/D,8OAAC;4BAAK,UAAU;4BAAc,WAAU;;8CAEtC,8OAAC;;sDACC,8OAAC;4CAAM,SAAQ;4CAAQ,WAAU;sDAA0C;;;;;;sDAC3E,8OAAC;4CACC,MAAK;4CACL,IAAG;4CACH,OAAO;4CACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;4CACxC,WAAU;4CACV,QAAQ;;;;;;;;;;;;8CAGZ,8OAAC;;sDACC,8OAAC;4CAAM,SAAQ;4CAAW,WAAU;sDAA0C;;;;;;sDAC9E,8OAAC;4CACC,MAAK;4CACL,IAAG;4CACH,OAAO;4CACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;4CAC3C,WAAU;4CACV,QAAQ;;;;;;;;;;;;8CAGZ,8OAAC;oCAAO,MAAK;oCAAS,WAAU;8CAAkE;;;;;;;;;;;;sCAIpG,8OAAC;4BAAE,WAAU;;gCAA8B;gCAClB;8CACvB,8OAAC;oCAAE,MAAK;oCAAY,WAAU;8CAAgB;;;;;;;;;;;;;;;;;;;;;;;0BAInD,8OAAC,mJAAA,CAAA,iBAAc;;;;;;;AAIpB;uCAEe","debugId":null}}]
}